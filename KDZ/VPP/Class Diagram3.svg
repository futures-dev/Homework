<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.0//EN'
          'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'>
<svg fill-opacity="0" xmlns:xlink="http://www.w3.org/1999/xlink" color-rendering="auto" color-interpolation="auto" text-rendering="auto" stroke="rgb(0,0,0)" stroke-linecap="square" width="298" stroke-miterlimit="10" shape-rendering="auto" stroke-opacity="0" fill="rgb(0,0,0)" stroke-dasharray="none" font-weight="normal" stroke-width="1" height="89" xmlns="http://www.w3.org/2000/svg" font-family="&apos;Dialog&apos;" font-style="normal" stroke-linejoin="miter" font-size="12" stroke-dashoffset="0" image-rendering="auto"
><!--Generated by the Batik Graphics2D SVG Generator--><defs id="genericDefs"
  /><g
  ><defs id="defs1"
    ><linearGradient x1="240" gradientUnits="userSpaceOnUse" x2="240" y1="190" y2="0" id="linearGradient1" spreadMethod="reflect"
      ><stop stop-opacity="1" stop-color="rgb(255,200,0)" offset="0%"
        /><stop stop-opacity="1" stop-color="white" offset="100%"
      /></linearGradient
      ><linearGradient x1="457.5" gradientUnits="userSpaceOnUse" x2="457.5" y1="395" y2="0" id="linearGradient2" spreadMethod="reflect"
      ><stop stop-opacity="1" stop-color="rgb(255,200,0)" offset="0%"
        /><stop stop-opacity="1" stop-color="white" offset="100%"
      /></linearGradient
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath1"
      ><path d="M-3.4 -3.4 L98.6 -3.4 L98.6 40.6 L-3.4 40.6 L-3.4 -3.4 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath2"
      ><path d="M-17 -17 L493 -17 L493 203 L-17 203 L-17 -17 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath3"
      ><path d="M-0 0 L-0 27 L96 27 L96 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath4"
      ><path d="M-0 0 L-0 135 L480 135 L480 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath5"
      ><path d="M-0 -0 L-0 11 L96 11 L96 -0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath6"
      ><path d="M-0 -0 L-0 55 L480 55 L480 -0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath7"
      ><path d="M-3.4 -7.4 L187.6 -7.4 L187.6 79.6 L-3.4 79.6 L-3.4 -7.4 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath8"
      ><path d="M-17 -37 L938 -37 L938 398 L-17 398 L-17 -37 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath9"
      ><path d="M0 -0 L0 73 L183 73 L183 -0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath10"
      ><path d="M0 -0 L0 365 L915 365 L915 -0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath11"
      ><path d="M0 0 L0 6 L184 6 L184 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath12"
      ><path d="M0 0 L0 30 L920 30 L920 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath13"
      ><path d="M-3.4 -3.4 L20.6 -3.4 L20.6 7.6 L-3.4 7.6 L-3.4 -3.4 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath14"
      ><path d="M-17 -17 L103 -17 L103 38 L-17 38 L-17 -17 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath15"
      ><path d="M-0 0 L-0 5 L18 5 L18 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath16"
      ><path d="M-0 0 L-0 25 L90 25 L90 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath17"
      ><path d="M-2 -2 L64 -2 L64 52 L-2 52 L-2 -2 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath18"
      ><path d="M-2 -2 L-2 52 L64 52 L64 -2 Z"
      /></clipPath
    ></defs
    ><g fill="white" fill-opacity="1" stroke-opacity="1" stroke="white"
    ><rect x="0" width="298" height="89" y="0" stroke="none"
    /></g
    ><g font-size="22" transform="translate(199.4,30.4) scale(0.2,0.2)" fill-opacity="1" fill="url(#linearGradient1)" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="url(#linearGradient1)" font-weight="bold" stroke-opacity="1"
    ><rect x="0" width="480" height="190" y="0" clip-path="url(#clipPath2)" stroke="none"
    /></g
    ><g stroke-linecap="butt" font-size="22" transform="translate(199.4,30.4) scale(0.2,0.2)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke-linejoin="round" stroke="black" font-weight="bold" stroke-opacity="1" stroke-miterlimit="0"
    ><rect fill="none" x="0" width="480" height="190" y="0" clip-path="url(#clipPath2)"
      /><line y2="55" fill="none" x1="0" clip-path="url(#clipPath2)" x2="480" y1="55"
      /></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,199.4,41.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="21" clip-path="url(#clipPath4)" stroke="none"
      >+val : string</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,199.4,41.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="44" clip-path="url(#clipPath4)" stroke="none"
      >+index : int</text
      ><line stroke-linecap="butt" clip-path="url(#clipPath4)" fill="none" x1="0" x2="480" y1="50" y2="50" stroke-linejoin="bevel" stroke-miterlimit="0"
    /></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,199.4,41.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="71" clip-path="url(#clipPath4)" stroke="none"
      >+dictTuple(val : string &amp;, index : int)</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,199.4,41.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="94" clip-path="url(#clipPath4)" stroke="none"
      >operator ==(other : dictTuple &amp;) : bool</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,199.4,41.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="117" clip-path="url(#clipPath4)" stroke="none"
      >operator &lt;(other : dictTuple &amp;) : bool</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,199.4,30.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" stroke-opacity="1"
    ><text x="179" xml:space="preserve" y="23" clip-path="url(#clipPath6)" stroke="none"
      >&lt;&lt;Struct&gt;&gt;</text
      ><text x="185" xml:space="preserve" y="50" clip-path="url(#clipPath6)" font-weight="bold" stroke="none"
      >dictTuple</text
    ></g
    ><g font-size="22" transform="translate(3.4,7.4) scale(0.2,0.2)" fill-opacity="1" fill="url(#linearGradient2)" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="url(#linearGradient2)" font-weight="bold" stroke-opacity="1"
    ><rect x="0" width="915" height="395" y="0" clip-path="url(#clipPath8)" stroke="none"
    /></g
    ><g stroke-linecap="butt" font-size="22" transform="translate(3.4,7.4) scale(0.2,0.2)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke-linejoin="round" stroke="black" font-weight="bold" stroke-opacity="1" stroke-miterlimit="0"
    ><rect fill="none" x="0" width="915" height="395" y="0" clip-path="url(#clipPath8)"
      /><line y2="30" fill="none" x1="0" clip-path="url(#clipPath8)" x2="915" y1="30"
      /></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="21" clip-path="url(#clipPath10)" stroke="none"
      >-words : Container</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="44" clip-path="url(#clipPath10)" stroke="none"
      >-wordRegex : char const*</text
      ><line stroke-linecap="butt" clip-path="url(#clipPath10)" fill="none" x1="0" x2="915" y1="50" y2="50" stroke-linejoin="bevel" stroke-miterlimit="0"
    /></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="71" clip-path="url(#clipPath10)" stroke="none"
      >-loadWords(input : string &amp;, textWords : set&lt;dictTuple&gt; &amp;) : void</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="94" clip-path="url(#clipPath10)" stroke="none"
      >-suggest_insertion(a_word : string &amp;, suggestions : set&lt;string&gt; &amp;) : void</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="117" clip-path="url(#clipPath10)" stroke="none"
      >-suggest_replacement(a_word : string &amp;, suggestions : set&lt;string&gt; &amp;) : void</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="140" clip-path="url(#clipPath10)" stroke="none"
      >-suggest_odd(a_word : string &amp;, suggestions : set&lt;string&gt; &amp;) : void</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="163" clip-path="url(#clipPath10)" stroke="none"
      >-suggest_adjacent(a_word : string &amp;, suggestions : set&lt;string&gt; &amp;) : void</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="186" clip-path="url(#clipPath10)" stroke="none"
      >-init(input : string &amp;, time : int64_t &amp;) : void</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="209" clip-path="url(#clipPath10)" stroke="none"
      >+Dictionary(input : string &amp;, time : int64_t &amp;)</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="232" clip-path="url(#clipPath10)" stroke="none"
      >+Dictionary(input : string &amp;)</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="255" clip-path="url(#clipPath10)" stroke="none"
      >+Dictionary()</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="278" clip-path="url(#clipPath10)" stroke="none"
      >+compareText(input : string &amp;, output : string &amp;) : uint64_t</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="301" clip-path="url(#clipPath10)" stroke="none"
      >+compareDict(input : string &amp;, output : string &amp;) : uint64_t</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="324" clip-path="url(#clipPath10)" stroke="none"
      >+findSimilair(input : string &amp;, output : string &amp;) : uint64_t</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,13.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="2" xml:space="preserve" y="347" clip-path="url(#clipPath10)" stroke="none"
      >+loadFromText(input : string &amp;) : void</text
    ></g
    ><g font-size="22" transform="matrix(0.2,0,0,0.2,3.4,7.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="&apos;Consolas&apos;" stroke="black" font-weight="bold" stroke-opacity="1"
    ><text x="399" xml:space="preserve" y="23" clip-path="url(#clipPath12)" stroke="none"
      >Dictionary</text
    ></g
    ><g font-size="11" transform="translate(170.4,3.4) scale(0.2,0.2)" fill-opacity="1" fill="white" text-rendering="geometricPrecision" font-family="sans-serif" stroke="white" stroke-opacity="1"
    ><rect x="0" width="89" height="24" y="0" clip-path="url(#clipPath14)" stroke="none"
    /></g
    ><g stroke-linecap="butt" font-size="11" transform="translate(170.4,3.4) scale(0.2,0.2)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="sans-serif" stroke-linejoin="bevel" stroke-dasharray="8,3" stroke="black" stroke-opacity="1" stroke-miterlimit="0"
    ><rect fill="none" x="0" width="89" height="24" y="0" clip-path="url(#clipPath14)"
    /></g
    ><g stroke-linecap="butt" font-size="11" transform="matrix(0.2,0,0,0.2,170.4,3.4)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="sans-serif" stroke-linejoin="bevel" stroke-dasharray="8,3" stroke="black" stroke-opacity="1" stroke-miterlimit="0"
    ><text x="3" xml:space="preserve" y="17" clip-path="url(#clipPath16)" stroke="none"
      >Container : class</text
    ></g
    ><g stroke-linecap="butt" font-size="11" transform="translate(162,28)" fill-opacity="1" fill="black" text-rendering="geometricPrecision" font-family="sans-serif" stroke-linejoin="round" stroke="black" stroke-width="0.2" stroke-opacity="1" stroke-miterlimit="0.4"
    ><line y2="25" fill="none" x1="25" clip-path="url(#clipPath18)" x2="38" y1="25"
      /><circle fill="none" r="1" clip-path="url(#clipPath18)" cx="26" cy="25"
      /><line y2="25" fill="none" x1="26" clip-path="url(#clipPath18)" x2="26" y1="25"
    /></g
    ></g
></svg
>
